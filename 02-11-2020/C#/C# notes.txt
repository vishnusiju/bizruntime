What is C#?
C# is pronounced "C-Sharp".

It is an object-oriented programming language created by Microsoft that runs on the .NET Framework.

C# has roots from the C family, and the language is close to other popular languages like C++ and Java.

The first version was released in year 2002. The latest version, C# 8, was released in September 2019.

C# is used for:

Mobile applications
Desktop applications
Web applications
Web services
Web sites
Games
VR
Database applications
And much, much more!

Why Use C#?
It is one of the most popular programming language in the world
It is easy to learn and simple to use
It has a huge community support
C# is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs.
As C# is close to C, C++ and Java, it makes it easy for programmers to switch to C# or vice versa.

Key features of the C# language include the following:
1.Component orientation
2.One-stop coding
3.Versioning
4.Type safety and a unified type system
5.Automatic and manual memory management
6.Leveraging of the CLR.



----------------------03-11-2020-----------------------------
c# types
1.value type
2.referance type


ooops concepts
inhiritance
polimorphomos
encapsulation
apstarction
interface
object ,access spacifier,


C#
1.String
2.Array
3.Operators
4.Lists with Examles

OOPS Javascript
1.class- is a collection of data members and member functions.
2.objects- instance of class.
3.prototype with Examples



-----------------04-11-2020----------------------------------
========c# OOPS=========
oops-the object-oriented programming is about creating objects that contain both data and methods.
>oop is faster `and easier to execute.
>oop provide a clear structure for the programs.
>oop helps to keep the code easier to maintan,modify, debug.
>oop makes it possible to create full reusable applications.
 
1.class- is a collection of data members and member functions Ex:car.
2.objects- instance of class Ex:volvo,audi,toyoto.
    1.abstraction->  it will give essentioal details and hide remaning things is known as abstraction.
       -we can say that class  is a abstract type,it means it will hide some datas only it shows.
       -the only way to access the data is using public functions.
            -if we want to access the privet property we can use public function(it is visible to all,here happening is it provide security).
    
    2.encapsulation-> wapping up(orumich akkunnathin) of data members and member functions is known as encapsulation.
			(data member and member function both are add together and make it as a capsule(class) that is encapsulation.
    3.inhiritance->it means one class generate inside of that class is inhiritance.
      or we can say that extenting one class from other classes(the properties are transferd to other class,properties are vary).
   
    4.polymorphism-> ability to take more than one form is polimorphism.(function overloading,operator overloading,function overridding).
      the situvation based we can use the function more than one form is polymorphism.
---(this all things are under oops concepts)----

====Classs methods====
>create a car class with three members: 2 field and 1 methoda.
// The class
class MyClass
{
  // Class members
  string color = "red";        // field
  int maxSpeed = 200;          // field
  public void fullThrottle()   // method
  {
    Console.WriteLine("The car is going as fast as it can!");
  }
}

1.field-the variables inside a class is called field.that we can access by creating objects of class, by using dot syntax(.).
>the following ex create class car with name myobj,then we print the values of the field color and maxspeed.
class Car 
{
  string color = "red";
  int maxSpeed = 200;

  static void Main(string[] args)
  {
    Car myObj = new Car();
    Console.WriteLine(myObj.color);
    Console.WriteLine(myObj.maxSpeed);
  }
}

>the fields are blank,and modify them when creating the objects.
class Car 
{
  string color;
  int maxSpeed;

  static void Main(string[] args)
  {
    Car myObj = new Car();
    myObj.color = "red";
    myObj.maxSpeed = 200;
    Console.WriteLine(myObj.color);
    Console.WriteLine(myObj.maxSpeed);
  }
}


2.object methods-methods normally belongsto class,we can access method with dot syntax.
  -the method must be public
  -we use the name of the method followed by two parantheses.and semicolon .
class Car
{
string color;       //field
int maxSpeed;       //field
public void fullThrottle()    //method
{
    Console.WriteLine("the car");
}
static void Main(string[] args)
{
	car myObj = new car();
	myobj.fullthrottle();    //call the methods
}

note:::: the static method can be accessed without creating objectof the classes,while public can be access by creating objects.

===constuctors====
>>constructor is a spacial method that is used to initialize an object. a constructor in invoked at the time of an object creation.constructor name must be the same as
  its class name. a constructoemust have no explicit return type.
>it is spacial metods present under a class responsible for initializing the variables of that class.
-the name of a constuctor method is exactely the same name of the class in which it was present.
-types,
	>default constuctors
	>paramererized constructors
	>copy constructors
	>static constructors
	>privat constructors
====access modifier========
it is used to provide restriction to a class,or restriction to a class of members,to access within the same class and outside the class,
type,
1.privat--privat members only acces within the same class.
2.protected--within the same class and drived class or access from same assemble or diffrent assemble.
3.interanal--able to access any class within the same assemble.
4.protected internal-is combination of protected and internal.
5.public--access any class any assemble.
======polimorphism==========
an operator or function will show diffrent behavior when we change no of arguments and when we change data type of arguments.
1.static(compile time polimorphism)-using function overloading we can achive static polimirphism
	>function overloading:-prividing new implimentation to a function with same name with diffrent signature.
2.dymanic(run time)-using function overridding we can achive dynamic polimorphism.
	>function overriding:-providing new implimentation to a function with same name with same signature.
======encapsulation=========
is the process of biding the member variable along with the member functions, done with the help of objects and with the help of access modifier.
>In c#, Encapsulation is a process of binding the data members and member functions into a single unit. In c#, 
the class is the real-time example for encapsulation because it will combine various types of data members and member functions into a single unit.
Generally, in c# the encapsulation is used to prevent alteration of code (data) accidentally from the outside of functions.

=====interface=======
>like abstract classs,interface cannot be used to create objects.
>interface method do not have body.
>on implimentation of an interface, you must override all of the methods.
>interface members are by default abstract and public.


-----------------06-11-2020--------------------------

1-c#
1.1 Exception handling
     tyr,catch,finally,throw.(ArithmeticException, FileNotFoundException, 
				IndexOutOfRangeException, TimeOutException.)
1.2 DivideByZeroException
1.3 FormatException
1.4 ArithmeticException
1.5 IndexOutOfRangeException

2-Javascript html events
2.1 onmouseover
2.2 onmouseout
2.3 onchange
2.4 onkeydown
2.5 onkeypress
2.6 onclick
2.7 onmousemove
2.8 onmouseenter

tomor-(overloading and overriding
user defined exception
inhiritance alltype)


===07-11-2020===
1.C#
1.1 custom exceptions
1.2 overloading
1.3 overriding

2 Javascript html events
2.1 onerror
2.2 onblur
2.3 oninput
2.4 onselect
2.5 oncopy
2.6 oncut
2.7 onpaste
2.8 onreset
2.9 onsubmit

(overriding,abstraction,)


















































